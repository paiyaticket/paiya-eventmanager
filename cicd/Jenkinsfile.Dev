pipeline {
    agent any

    environment {
        DOCKER_HUB_PWD = credentials('DOCKER_HUB_PWD')
        DOCKER_HUB_USER = credentials('DOCKER_HUB_USER')
        SONAR_TOKEN = credentials('SONAR_TOKEN')
    }

    stages{
        stage('Build'){
            steps{
                sh './gradlew build -x test'
            }
        }

        stage('Unit test'){
            steps{
                sh './gradlew test'
            }
        }

        stage('Integration test'){
            steps{
                sh './gradlew integrationTest'
            }
        }

        stage('Statics Analysis'){
            options {
                timeout(time: 2, unit: "MINUTES")
            }
            steps{
                script{
                    withSonarQubeEnv() {
                        sh './gradlew jacocoTestReport sonar -Psonarstage=dev -Dsonar.token=${SONAR_TOKEN}'
                    }
                }
            }
        }

        stage('Build docker image and push'){
            steps{
                sh 'docker login -u ${DOCKER_HUB_USER} -p ${DOCKER_HUB_PWD}'
                sh "docker build -f cicd/Dockerfile -t koffiange/paiya-eventmanager:0.0.${env.BUILD_ID} ."
                sh "docker push koffiange/paiya-eventmanager:0.0.${env.BUILD_ID}"
            }
        }

        stage('Deploy'){
            options {
                timeout(time: 1, unit: "MINUTES")
            }
            steps{
                sh "docker rm -fv container /paiya-eventemanager"
                sh "docker run --detach --name paiya-eventemanager --network paiya-network -p 8010:8010 koffiange/paiya-eventmanager:0.0.${env.BUILD_ID}"
            }
        }
    }
}