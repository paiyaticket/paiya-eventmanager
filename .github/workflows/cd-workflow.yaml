name: Deploy on Cloud Run

on:
  push:
    branches: [ "staging" ]

env:
  PROJECT_ID: 'paiya-413605' # TODO: update to your Google Cloud project ID
  REGION: 'us-central1' # TODO: update to your region
  SERVICE: 'paiya-accountmanager' # TODO: update to your service name

  WORKLOAD_IDENTITY_PROVIDER: 'projects/1025378920331/locations/global/workloadIdentityPools/github-action-identity-pool/providers/github-identity-provider' # TODO: update to your workload identity provider

jobs:
  deploy:
    runs-on: 'ubuntu-latest'

    permissions:
      contents: 'read'
      id-token: write

    steps:
    - name: Checkout
      uses: 'actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332' # actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

    - name: Build and generate a jar file
      run: ./gradlew build

    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v2 # google-github-actions/auth@v2
      with:
        workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'

    - name: Docker Auth
      uses: docker/login-action@v3 # docker/login-action@v3
      with:
        username: 'oauth2accesstoken'
        password: '${{ steps.auth.outputs.auth_token }}'
        registry: '${{ env.REGION }}-docker.pkg.dev'

    - name: Build and Push Container
      run: |-
        DOCKER_TAG="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}"
        docker build --tag "${DOCKER_TAG}" .
        docker push "${DOCKER_TAG}"

    - name: Deploy to Cloud Run
      uses: google-github-actions/deploy-cloudrun@33553064113a37d688aa6937bacbdc481580be17 # google-github-actions/deploy-cloudrun@v2
      with:
        service: '${{ env.SERVICE }}'
        region: '${{ env.REGION }}'
        image: '${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}'

    - name: Show output
      run: |
        echo ${{ steps.deploy.outputs.url }}
