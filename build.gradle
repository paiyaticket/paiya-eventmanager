plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.6'
	id 'io.spring.dependency-management' version '1.1.6'
	id "org.sonarqube" version "6.0.0.5145"
	id 'jacoco'
}

group = 'events.paiya'
version = '0.0.1-SNAPSHOT'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('mapstructVersion', "1.5.5.Final")
	set('lombokMapstructBindingVersion', "0.2.0")
	set('springCloudVersion', "2023.0.2")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	implementation 'org.apache.commons:commons-lang3:3.13.0'
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

sonar {
	properties {
		property "sonar.projectKey", "paiyaticket_paiya-eventmanager"
		property "sonar.projectName", "paiya-eventmanager"
		property "sonar.organization", "paiyaticket"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.sources", "src/main/java/events/paiya/eventmanager/services"
		property "sonar.tests", "src/test"
	}
}

jacocoTestReport {
	reports {
		xml.required = true
	}
}


//*****************//
// INTEGRATION TEST//
//*****************//


sourceSets {
	integrationTest {
		java {
			srcDirs = ['src/integrationTest/java']
		}
		compileClasspath += sourceSets.main.output
		runtimeClasspath += sourceSets.main.output
	}
}

configurations {
	integrationTestImplementation.extendsFrom implementation
	integrationTestRuntimeOnly.extendsFrom runtimeOnly
}

dependencies {
	integrationTestImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.register('integrationTest', Test) {
	description = 'Runs integration tests.'
	group = 'verification'

	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath

	useJUnitPlatform()
}
